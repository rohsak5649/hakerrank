interface InputData {
    username: string;
    email: string;
    password: string;
    phone: string;
}

interface ValidationResult {
    username: boolean;
    email: boolean;
    password: boolean;
    phone: boolean;
}

function processData(input: string) {
    // Parse the input JSON string
    const data: InputData = JSON.parse(input);
    
    // Validation results
    const validationResults: ValidationResult = {
        username: validateUsername(data.username),
        email: validateEmail(data.email),
        password: validatePassword(data.password),
        phone: validatePhone(data.phone)
    };
    
    // Output the results with proper formatting
    console.log(JSON.stringify(validationResults, null, 2));
}

function validateUsername(username: string): boolean {
    const usernameRegex = /^[a-zA-Z][a-zA-Z0-9_]{4,14}$/;
    return usernameRegex.test(username);
}

function validateEmail(email: string): boolean {
    const emailRegex = /^[a-zA-Z0-9._]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/;
    return emailRegex.test(email);
}

function validatePassword(password: string): boolean {
    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@#$%^&*])[A-Za-z\d@#$%^&*]{8,}$/;
    return passwordRegex.test(password);
}

function validatePhone(phone: string): boolean {
    const phoneRegex = /^\d{10}$/;
    return phoneRegex.test(phone);
}

// Example usage
process.stdin.resume();
process.stdin.setEncoding("ascii");
let _input = "";
process.stdin.on("data", function (input: string) {
    _input += input;
});

process.stdin.on("end", function () {
    processData(_input);
});
